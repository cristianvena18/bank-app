version: '3.2'

services:
  api:
    container_name: api
    build: ../server
    hostname: api
    depends_on:
      - mysql
      - redis
    ports:
      - '4000:3000'
    volumes:
      - ../server:/usr/src/service/server
    working_dir: /usr/src/service/server
    command: 'yarn start'
    networks:
      - elk
  
  adminer:
    container_name: adminer
    image: adminer:latest
    ports:
      - "8080:8080"
    networks:
      - elk

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ../docker/redis/data:/data
      - ../docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf
    networks:
      - elk

  mysql:
    image: mysql:8.0
    hostname: mysql
    container_name: mysql
    ports:
      - '3306:3306'
    volumes:
      - ../docker/mysql-data:/var/lib/mysql
      - ../docker/mysql-config:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password --port=3306
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: database
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      USER: 1000
    networks:
        - elk
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
      - alertmanager
    networks:
      - elk
        
  node-exporter:
    image: prom/node-exporter
    container_name: exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - elk
  
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - elk
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8000:8080
    networks:
      - elk
  
  grafana:
    image: grafana/grafana
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch: {}
  prometheus_data: {}
  grafana_data: {}
